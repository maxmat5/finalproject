var drawHead= function (x,y,bitheight)
{
    noStroke();
 fill(199, 131, 59);
 ellipse(x+(100*bitheight/100), y, 100*bitheight/100, 121*bitheight/100);//head 
 fill(245, 235, 235);
 ellipse(x+(78*bitheight/100),y-(12*bitheight/100),28*bitheight/100,17*bitheight/100);//leftEye
 ellipse(x+(121*bitheight/100),y-(12*bitheight/100),28*bitheight/100,17*bitheight/100);//rightEye
 fill(5, 4, 4);
ellipse(x+(78*bitheight/100),y-(12*bitheight/100),11*bitheight/100,9*bitheight/100);//leftpupil
ellipse (x+(120*bitheight/100),y-(12*bitheight/100),11*bitheight/100,9*bitheight/100);//rightpupil

};
var drawdets= function(x,y,bitheight) {
stroke(0, 0, 0);
fill(199, 131, 59);
bezier(x+(96*bitheight/100),y+(10*bitheight/100),x+(95*bitheight/100),
y+(12*bitheight/100),x+(142*bitheight/100),y+(20*bitheight/100),x+(101*bitheight/100),y+1*bitheight/100);//nose
ellipse (x+(100*bitheight/100),y+(30*bitheight/100),17*bitheight/100,0*bitheight/100);//mouth
fill(20, 20, 20);
ellipse(x+(51*bitheight/100),y-(43*bitheight/100),42*bitheight/100,42*bitheight/100);
ellipse(x+(77*bitheight/100),y-(59*bitheight/100),42*bitheight/100,42*bitheight/100);
ellipse(x+(92*bitheight/100),y-(66*bitheight/100),42*bitheight/100,42*bitheight/100);
ellipse(x+117*bitheight/100,y-62*bitheight/100,42*bitheight/100,42*bitheight/100);
ellipse(x+144*bitheight/100,y-48*bitheight/100,42*bitheight/100,42*bitheight/100);//hair 
        
  };
var drawShirt= function(x,y,bitheight){
    fill(41, 36, 36);
     quad(x+192*bitheight/100,y+129*bitheight/100,x+136*bitheight/100,y+59*bitheight           /100,x+63*bitheight/100,y+60*bitheight/100,x+16*bitheight/100,y+130*bitheight          /100);
    fill(237, 14, 14);
    textSize(50*bitheight/100);
    text("AM",x+62*bitheight/100,y+14*bitheight/100);
};
var drawBit= function(x,y,bitheight){
    drawHead(x,y,bitheight);
    drawShirt(x,y,bitheight);
    drawdets(x,y,bitheight);
};

var drawPipes = function(){ 
noStroke();

fill(38, 255, 0);
rect(293, 0, 45, 150);

fill(38, 255, 0);
rect(293, 400, 45,-150);
};
 
var currentScene=1;

var Button = function(config) {
    this.x = config.x || 0;
    this.y = config.y || 0;
    this.width = config.width || 150;
    this.height = config.height || 50;
    this.label = config.label || "Click";
    this.onClick = config.onClick || function() {};
};

Button.prototype.draw = function() {
    fill(255, 255, 255);
    rect(this.x, this.y, this.width, this.height, 5);
    fill(0, 0, 0);
    textSize(19);
    textAlign(LEFT, TOP);
    text(this.label, this.x+10, this.y+-5);
};

Button.prototype.isMouseInside = function() {
    return mouseX > this.x &&
           mouseX < (this.x + this.width) &&
           mouseY > this.y &&
           mouseY < (this.y + this.height);
};

Button.prototype.handleMouseClick = function() {
    if (this.isMouseInside()) {
        this.onClick();
    }
};

var startButton = new Button({
    x: 130,
    y: 300,
    label: "        Start",
    onClick: function() {
        currentScene++;
    }
});

var Splash = function(){
    currentScene = 1;
background(84, 188, 217);
    fill(255, 255, 255);
    textSize(39);
    text("Flappy Bit", 104, 67);
    startButton.draw();
    drawBit(98,204,39);
};


var numPipes = 100;
var score = 0;


var bit = function(x, y) {
    this.x = x;
    this.y = y;
   this.img = drawBit;  
    this.sticks = 0;
};

bit.prototype.draw = function() {
    fill(186, 44, 44);
    this.y = constrain(this.y, 0, height-50);
   drawBit(this.x, this.y, 16, 25);
   
};

bit.prototype.flap = function() {
    this.y -= 4;
};

bit.prototype.fall = function() {
    this.img = getImage("creatures/Hopper-Happy");
    this.y += 4;
};

/*bit.prototype.checkForStickGrab = function(pipe) {
if ((pipe.x >= this.x && pipe.x <= (this.x + 15)) &&
        (pipe.y >= this.y && pipe.y <= (this.y + 10))) {
        pipe.y = -400;
        score++;
    }
};*/

bit.prototype.checkForPipes = function(pipe) {
    if((pipe.x>=this.x && pipe.x<= (this.x +50)) &&
    (pipe.y<=this.y && pipe.y<= (400-this.y))) {
        score++;
    }
};
bit.prototype.checkForPipes = function(pipe) {
    if((pipe.x>=this.x && pipe.x<= (this.x +50)) &&
    (pipe.y<=this.y && pipe.y<= (400-this.y))) {
        score++;
    }
    
};

var Pipes = function(x, y) { 
    this.x = x;
    this.y = y;
   
};

Pipes.prototype.draw = function() {
    noStroke();

fill(38, 255, 0);
rect(this.x, 0, 45, this.y);

fill(38, 255, 0);
rect(this.x, 400, 45,-this.y);
};   

var bit = new bit(15, 90);

var pipes = [];
for (var i = 0; i < numPipes; i++) {  
    pipes.push(new Pipes(i * 150 + 100, random(50, 175)));


} 

var drawGame = function() {
    
    // static
    background(114, 197, 242);
    fill(88, 90, 99);
    noStroke();
fill(255, 255, 255);
ellipse(67,60,55,53);
ellipse(103,84,53,53);
ellipse(70,87,62,53);
ellipse(34,84,55,53);

ellipse(252,60,55,53);
ellipse(221,84,53,53);
ellipse(280,87,62,53);
ellipse(251,99,55,53);

ellipse(315,171,53,53);
ellipse(341,151,51,53);
ellipse(355,172,54,53);


fill(18, 23, 17);
rect(197,281,64,120);
fill(237, 214, 9);
rect(211,301,5,8);
rect(228,301,5,8);
rect(244,301,5,8);

rect(211,318,5,8);
rect(228,318,5,8);
rect(244,318,5,8);

rect(211,335,5,8);
rect(228,335,5,8);
rect(244,335,5,8);

rect(211,351,5,8);
rect(228,351,5,8);
rect(244,351,5,8);

rect(211,367,5,8);
rect(228,367,5,8);
rect(244,367,5,8);

rect(226,392,5,8);
rect(231,392,5,8);

    rectMode(CORNER);
    // draw edge of lower road
 
    
    
    
    for (var i = 0; i < pipes.length; i++) {
        pipes[i].draw();
        bit.checkForPipes(pipes[i]);
        pipes[i].x -= 1;
    }
    
    fill(20, 17, 20);
    textSize(18);
    text("Score: " + round(score/50), 20, 30);
    
    
    if (keyIsPressed && keyCode === 0) {
        bit.flap();
    } else {
        bit.fall();
    }
    bit.draw();  
}; 

draw= function() {
    if ( currentScene===1){Splash();}
    else{drawGame();}
};

mouseClicked=function()
{
  startButton.handleMouseClick();
};

Splash();



